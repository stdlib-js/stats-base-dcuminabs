{"version":3,"file":"index.mjs","sources":["../lib/dcuminabs.js","../lib/ndarray.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport abs from '@stdlib/math-base-special-abs' ;\n\n\n// MAIN //\n\n/**\n* Computes the cumulative minimum absolute value of double-precision floating-point strided array elements.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {Float64Array} output array\n*\n* @example\n* import Float64Array from '@stdlib/array-float64' ;\n*\n* var x = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n* var y = new Float64Array( x.length );\n* var N = x.length;\n*\n* var v = dcuminabs( N, x, 1, y, 1 );\n* // returns <Float64Array>[ 1.0, 1.0, 1.0 ]\n*/\nfunction dcuminabs( N, x, strideX, y, strideY ) {\n\tvar min;\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tmin = abs( x[ ix ] );\n\ty[ iy ] = min;\n\n\tiy += strideY;\n\ti = 1;\n\tif ( isnan( min ) === false ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\tix += strideX;\n\t\t\tv = abs( x[ ix ] );\n\t\t\tif ( isnan( v ) ) {\n\t\t\t\tmin = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( v < min ) {\n\t\t\t\tmin = v;\n\t\t\t}\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\tif ( isnan( min ) ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default dcuminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport abs from '@stdlib/math-base-special-abs' ;\n\n\n// MAIN //\n\n/**\n* Computes the cumulative minimum absolute value of double-precision floating-point strided array elements.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {Float64Array} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {Float64Array} output array\n*\n* @example\n* import Float64Array from '@stdlib/array-float64' ;\n* import floor from '@stdlib/math-base-special-floor' ;\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n* var y = new Float64Array( x.length );\n* var N = floor( x.length / 2 );\n*\n* var v = dcuminabs( N, x, 2, 1, y, 1, 0 );\n* // returns <Float64Array>[ 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0 ]\n*/\nfunction dcuminabs( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar min;\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\tmin = abs( x[ ix ] );\n\ty[ iy ] = min;\n\n\tiy += strideY;\n\ti = 1;\n\tif ( isnan( min ) === false ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\tix += strideX;\n\t\t\tv = abs( x[ ix ] );\n\t\t\tif ( isnan( v ) ) {\n\t\t\t\tmin = v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( v < min ) {\n\t\t\t\tmin = v;\n\t\t\t}\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\tif ( isnan( min ) ) {\n\t\tfor ( i; i < N; i++ ) {\n\t\t\ty[ iy ] = min;\n\t\t\tiy += strideY;\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default dcuminabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport dcuminabs from './dcuminabs.js' ;\nimport ndarray from './ndarray.js' ;\n\n\n// MAIN //\n\nsetReadOnly( dcuminabs, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default dcuminabs;\n"],"names":["dcuminabs","N","x","strideX","y","strideY","min","ix","iy","v","i","abs","isnan","offsetX","offsetY","setReadOnly","ndarray"],"mappings":";;qSAgDA,SAASA,EAAWC,EAAGC,EAAGC,EAASC,EAAGC,GACrC,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,OAAOG,EAiBR,GATCI,EADIH,EAAU,GACR,EAAEJ,GAAKI,EAER,EAENC,EAAMK,EAAKT,EATVK,EADIJ,EAAU,GACR,EAAEF,GAAKE,EAER,IAQNC,EAAGI,GAAOF,EAEVE,GAAMH,EACNK,EAAI,GACkB,IAAjBE,EAAON,GACX,KAASI,EAAIT,EAAGS,IAAM,CAGrB,GADAD,EAAIE,EAAKT,EADTK,GAAMJ,IAEDS,EAAOH,GAAM,CACjBH,EAAMG,EACN,KACA,CACIA,EAAIH,IACRA,EAAMG,GAEPL,EAAGI,GAAOF,EACVE,GAAMH,CACN,CAEF,GAAKO,EAAON,GACX,KAASI,EAAIT,EAAGS,IACfN,EAAGI,GAAOF,EACVE,GAAMH,EAGR,OAAOD,CACR,CC5CA,SAASJ,EAAWC,EAAGC,EAAGC,EAASU,EAAST,EAAGC,EAASS,GACvD,IAAIR,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,OAAOG,EAUR,GAPAI,EAAKM,EAELR,EAAMK,EAAKT,EAHXK,EAAKM,IAILT,EAAGI,GAAOF,EAEVE,GAAMH,EACNK,EAAI,GACkB,IAAjBE,EAAON,GACX,KAASI,EAAIT,EAAGS,IAAM,CAGrB,GADAD,EAAIE,EAAKT,EADTK,GAAMJ,IAEDS,EAAOH,GAAM,CACjBH,EAAMG,EACN,KACA,CACIA,EAAIH,IACRA,EAAMG,GAEPL,EAAGI,GAAOF,EACVE,GAAMH,CACN,CAEF,GAAKO,EAAON,GACX,KAASI,EAAIT,EAAGS,IACfN,EAAGI,GAAOF,EACVE,GAAMH,EAGR,OAAOD,CACR,CC9DAW,EAAAf,EAAA,UAAAgB"}